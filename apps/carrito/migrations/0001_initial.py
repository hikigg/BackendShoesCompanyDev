# Generated by Django 4.2.7 on 2023-12-02 09:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0004_historicalusuariodatos_documento_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('productos', '0005_remove_cuponesproducto_producto_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarritoArticulos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Fecha de modificacion')),
                ('deleted_at', models.DateField(auto_now=True, verbose_name='Fecha eliminacion')),
                ('cantidad', models.PositiveSmallIntegerField()),
                ('precio', models.TextField(max_length=10, verbose_name='Precio de articulos')),
                ('impuesto', models.TextField(max_length=10, verbose_name='Impuesto de articulos')),
                ('total', models.TextField(max_length=12, verbose_name='Total de articulos')),
                ('cupones_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productos.cuponesproducto', verbose_name='Cupon de articulos')),
                ('producto_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='productos.producto', verbose_name='Oferta de articulos')),
                ('usuariodatos_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.usuariodatos', verbose_name='Datos del usuario para los articulos')),
            ],
            options={
                'verbose_name': 'Carrito articulo',
                'verbose_name_plural': 'Carrito articulos',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCarritoPedido',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_at', models.DateField(blank=True, editable=False, verbose_name='Fecha de creacion')),
                ('modified_at', models.DateField(blank=True, editable=False, verbose_name='Fecha de modificacion')),
                ('deleted_at', models.DateField(blank=True, editable=False, verbose_name='Fecha eliminacion')),
                ('codigo', models.TextField(max_length=10, verbose_name='Codigo de pedido')),
                ('fecha_pedido', models.DateField(blank=True, editable=False, verbose_name='Fecha de pedido')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('carrito_articulo_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='carrito.carritoarticulos', verbose_name='Articulos pedido')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('usuariodatos_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='usuarios.usuariodatos', verbose_name='Datos del usuario para el pedido')),
            ],
            options={
                'verbose_name': 'historical Pedido de carrito',
                'verbose_name_plural': 'historical Pedido de carrito',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCarritoArticulos',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_at', models.DateField(blank=True, editable=False, verbose_name='Fecha de creacion')),
                ('modified_at', models.DateField(blank=True, editable=False, verbose_name='Fecha de modificacion')),
                ('deleted_at', models.DateField(blank=True, editable=False, verbose_name='Fecha eliminacion')),
                ('cantidad', models.PositiveSmallIntegerField()),
                ('precio', models.TextField(max_length=10, verbose_name='Precio de articulos')),
                ('impuesto', models.TextField(max_length=10, verbose_name='Impuesto de articulos')),
                ('total', models.TextField(max_length=12, verbose_name='Total de articulos')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cupones_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='productos.cuponesproducto', verbose_name='Cupon de articulos')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('producto_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='productos.producto', verbose_name='Oferta de articulos')),
                ('usuariodatos_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='usuarios.usuariodatos', verbose_name='Datos del usuario para los articulos')),
            ],
            options={
                'verbose_name': 'historical Carrito articulo',
                'verbose_name_plural': 'historical Carrito articulos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CarritoPedido',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Fecha de modificacion')),
                ('deleted_at', models.DateField(auto_now=True, verbose_name='Fecha eliminacion')),
                ('codigo', models.TextField(max_length=10, verbose_name='Codigo de pedido')),
                ('fecha_pedido', models.DateField(auto_now=True, verbose_name='Fecha de pedido')),
                ('carrito_articulo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carrito.carritoarticulos', verbose_name='Articulos pedido')),
                ('usuariodatos_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.usuariodatos', verbose_name='Datos del usuario para el pedido')),
            ],
            options={
                'verbose_name': 'Pedido de carrito',
                'verbose_name_plural': 'Pedido de carrito',
            },
        ),
    ]
